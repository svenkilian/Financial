# -------------------------------
# Plotting multiple measures for a single security
# -------------------------------

# # JOB: Melt measures into long form
# data.reset_index(inplace=True)
# data = pd.melt(data, id_vars=['datadate', 'conm'], value_vars=['cshtrd', 'prccd', 'cshoc'], var_name='measure')
#
# # JOB: Create pivot table
# data_pivot = data.pivot_table(values='value', index=['datadate', 'measure'], columns=['conm'])
# # data_pivot.index = pd.to_datetime(data_pivot.index)
# print(data_pivot)
#
# # print(data_pivot.loc[(slice(None), 'cshtrd'), :])
#
# plot_data(data_pivot.loc[(slice('2019-01-01', '2019-11-01'), 'cshtrd'), :], columns=data_pivot.columns,
#           title='Trading Volume')
# plt.show()


# ---------------------------------
# JOB: Example queries
# ---------------------------------

data = get_data_table(db, sql_query=True,
                              query_string="select b.gvkeyx, a.gvkey, a.isin, b.from, b.thru, a.datadate, a.conm, a.cshtrd, a.prccd, a.divd, a.curcdd, a.exchg, a.fic, a.gind, a.iid, a.secstat, a.trfd "
                                           "from comp.g_secd a join comp.g_idxcst_his b on a.gvkey = b.gvkey "
                                           "where b.gvkeyx = '150095' and b.thru is null and a.isin is not null and a.datadate between '2018-01-01' and '2019-11-26' "
                                           "order by a.datadate asc",
                              index_col=['datadate', 'gvkey'], table_info=1)

# JOB: Get DAX constituents for specific period
# data = get_data_table(db, sql_query=True,
#                       query_string="select b.gvkeyx, a.gvkey, a.isin, b.from, b.thru, a.datadate, a.conm, a.cshtrd, a.prccd, a.divd, a.curcdd, a.exchg, a.fic, a.gind, a.iid, a.secstat, a.trfd "
#                                    "from comp.g_secd a join comp.g_idxcst_his b on a.gvkey = b.gvkey "
#                                    "where b.gvkeyx = '150007' and b.thru is null and a.isin is not null and a.datadate between '2017-01-01' and '2019-11-26' "
#                                    "order by a.datadate asc",
#                       index_col=['datadate', 'gvkey'], table_info=2)


# JOB: Get select current DAX members and return various key figures
# company_codes = ['015575', '015576', '015677']
# parameters = {'company_codes': tuple(company_codes)}
# data = get_data_table(db, sql_query=True,
#                       query_string="select b.gvkeyx, a.gvkey, a.isin, b.from, b.thru, a.datadate, a.conm, a.cshtrd, a.prccd, a.divd, a.cshoc "
#                                    "from comp.g_secd a join comp.g_idxcst_his b on a.gvkey = b.gvkey "
#                                    "where b.gvkeyx = '150007' and a.gvkey in %(company_codes)s and b.thru IS NULL and a.cshoc IS NOT NULL and a.isin IS NOT NULL and a.datadate between '2010-11-01' and '2019-11-01' "
#                                    "order by a.datadate asc",
#                       index_col=['datadate', 'gvkey'], params=parameters, table_info=1)


# JOB: [Non-SQL] Get Dow Jones daily index data
# dow_data = get_data_table(db=db, library='djones', table='djdaily', columns=['date', 'dji'], obs=-1,
#                           index_col='date', sql_query=False, recent=True, n_recent=10)


# JOB: [SQL] Get Dow Jones daily index data
# dow_data_sql = get_data_table(db, sql_query=True, query_string='select date,dji from djones.djdaily LIMIT 10;',
#                               date_cols='date', recent=True, n_recent=100)


# data = get_data_table(db, sql_query=True,
#                       query_string="select cusip, permno, date, bidlo, askhi "
#                                    "from crsp.dsf "
#                                    "where permno in (14593, 90319, 12490, 17778) and "
#                                    "date between '2010-01-01' and '2013-12-31' and "
#                                    "askhi > 2000",
#                       date_cols='date')


# JOB: Query data for IBM from joining fundamenal table with monthly data
# db.raw_sql("select a.gvkey, a.datadate, a.tic, a.conm, a.at, a.lt, b.prccm, b.cshoq "
#            "from comp.funda a join comp.secm b on a.gvkey = b.gvkey and a.datadate = b.datadate "
#            "where a.tic = 'IBM' and a.datafmt = 'STD' and a.consol = 'C' and a.indfmt = 'INDL'")


# JOB: Query company data in certain time frame
# values = ','.join(['datadate', 'conm', 'gvkey', 'prcod', 'prcld', 'prchd'])
# company_keys = ('001491')
# # parm = {'values': values, 'company_keys': tuple(company_keys)}
# data = get_data_table(db, sql_query=True,
#                       query_string="select %(values)s "
#                                    "from comp.g_secd "
#                                    "where datadate between '2019-01-01' and '2019-03-01' "
#                                    # "and gvkey in %(company_keys)s "
#                                    "and gvkey = '001491' "
#                                    "order by datadate "
#                                    "asc " % {'values': values, 'company_keys': company_keys},
#                       index_col=['datadate', 'gvkey'], table_info=1)
